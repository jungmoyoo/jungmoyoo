package edu.kh.array.practice;

import java.util.Arrays;
import java.util.Scanner;

public class ArrayPractice {

	public void practice1() {
		
//		길이가 9인 배열을 선언 및 할당하고, 1부터 9까지의 값을 반복문을 이용하여
//		순서대로 배열의 각 인덱스 요소에 대입하고 출력한 후
//		짝수 번째 인덱스 값의 합을 출력하세요. (0 번째 인덱스는 짝수로 취급)
		
		int[] arr = new int[9] ; 
		int sum = 0 ;
			//stack 메모리에 arr이라는 4byte 메모리 공간을 할당 
			//heap 메모리 구조에 int형 8칸짜리 메모리 공간을 새롭게 생성
			//8칸짜리 배열의 메모리 주소를 arr이라는 변수에 입력해서 참조하게함
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			arr[i] = i + 1 ; 
			
			System.out.print(arr[i] + " ");
			
			if( i % 2 == 0 ) {
				sum += arr[i] ;
			}
					
			
		}
		System.out.print("\n짝수 번째 인덱스 합 : " + sum );
	}
	
	public void practice2() {
		
//		길이가 9인 배열을 선언 및 할당하고, 9부터 1까지의 값을 반복문을 이용하여
//		순서대로 배열의 각 인덱스 요소에 대입하고 출력한 후
//		홀수 번째 인덱스 값의 합을 출력하세요. (0 번째 인덱스는 짝수로 취급
		
		int arr [] = new int[9] ;
		int j = 0 ;
		int sum = 0 ;
		
		for ( int i = arr.length ; i > 0 ; i-- ) {
			arr [j] = i ;
			System.out.print(arr[j] + " ");
			
			
			if(j%2 != 0) {
				sum+= arr[j] ;
			}
			j++;
			
		}
		System.out.println("\n홀수 번째 인덱스 값의 합 : " + sum);
		
		
	}
	
	
	public void practice3() {
		
//		사용자에게 입력 받은 양의 정수만큼 배열 크기를 할당하고
//		1부터 입력 받은 값까지 배열에 초기화한 후 출력하세요
		Scanner sc = new Scanner(System.in);
		
		System.out.print("양의 정수 : ");
		int input = sc.nextInt();
		
		int[] arr = new int[input] ;
		
		for( int i = 0 ; i < arr.length ; i++ ) {
			
			arr[i] = i + 1 ;
			System.out.print(arr[i] + " ");
			
		}
		
	}
	
	public void practice4() {
		
		Scanner sc = new Scanner(System.in) ; 
		//정수 5개를 입력 받아 배열을 초기화 하고
		//검색할 정수를 하나 입력 받아 배열에서 같은 수가 있는 인덱스를 찾아 출력.
		//배열에 같은 수가 없을 경우 “일치하는 값이 존재하지 않습니다“ 출력
		
		int[] arr = new int[5] ;
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			System.out.printf("입력 %d : ",i);
			arr[i] = sc.nextInt();
			
		}
		
		System.out.print("검색할 값 : ");
		int search = sc.nextInt();
		boolean flag = false ;
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			if ( arr[i] == search ) {
				System.out.print("인덱스 : " + i);
				flag = true ;
			}
		}
		
		if ( flag == false ) {
			System.out.println("일치하는 값이 없습니다.");
			
		}
	}
	
	public void practice5() { 
		
		Scanner sc = new Scanner(System.in) ;
		
//		문자열을 입력 받아 문자 하나하나를 배열에 넣고 검색할 문자가 문자열에 몇 개 들어가 있는지
//		개수와 몇 번째 인덱스에 위치하는지 인덱스를 출력하세요
		
		
		System.out.print("문자열 : ") ;
		String str = sc.nextLine() ;
		
		char[] arr = new char[str.length()];
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
		
			arr[i] = str.charAt(i); 
			
		}
		
		
		System.out.print("문자 : ") ;
		char character = sc.next().charAt(0) ;
		
		int count =  0 ;
		
		System.out.print("application에 " + character + "가 존재하는 위치(인덱스) : ");
		for( int i = 0 ; i < arr.length ; i++ ) {
			
			if ( arr[i] == character ) {
				System.out.print(i + " ");
				count++ ;
			}
		}
		System.out.print("\n" + character + " 개수 : " + count);
		}
		
	
	
	public void practice6() {
		
		Scanner sc = new Scanner(System.in);
		
		System.out.print("정수 : ");
		int input = sc.nextInt() ; 
		int[] arr = new int[input] ;
		int sum = 0 ;
		
		for( int i = 0 ; i < input ; i++ ) {
			
			System.out.printf("배열 %d번째 인덱스에 넣을 값 : ",i);
			arr[i] = sc.nextInt();
			sum += arr[i] ;
		}
		
		System.out.print(Arrays.toString(arr));
		System.out.print("\n총 합 : " + sum );
		
	}
	
	
	
	public void practice7() {
		
		Scanner sc = new Scanner(System.in) ;
		
		System.out.print("주민등록번호(-포함) : ");
		String pNo = sc.nextLine();
		char[] arr = new char[pNo.length()] ;
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			if( i < 8 ) {
			arr[i] = pNo.charAt(i) ;
			}
			else {
				arr[i] = '*' ;
			}
			
		}
		for( int i = 0 ; i < arr.length ; i++ ) {
		System.out.print(arr[i]);
		}
		
		
		
		
		
	}
	
	
	public void practice8() {
		
//		3이상인 홀수를 입력 받아 배열의 중간까지는 1부터 1씩 증가하여 오름차순으로 값을 넣고,
//		중간 이후부터 끝까지는 1씩 감소하여 내림차순으로 값을 넣어 출력하세요.
//		단, 입력한 정수가 홀수가 아니거나 3 미만일 경우 “다시 입력하세요”를 출력하고
//		다시 정수를 받도록 하세요.
		
		Scanner sc = new Scanner(System.in) ;
		
		for ( int i = 1 ; i < 2 ; i++ ) {
			
			System.out.print("정수 : ");
			int input = sc.nextInt() ;
			
			
			if ( input < 3 | input % 2 == 0 ) {
				System.out.println("다시 입력하세요.");
				i-- ;
			}else {
				
				int[] arr = new int[input] ;
				int num = 1 ;
				
				for ( int j = 0 ; j < arr.length ; j++ ) {
					
					if ( j < input/2 ) {
						arr[j] = num ; 
						num++ ;
					}else {
						arr[j] = num ;
						num-- ;
					}
					
					
					// 5
					// 1 , 2 , 3 , 2 , 1
					//arr[0] arr[1] arr[2] arr[3] arr[4]	
					// 7
					// 1 , 2 , 3 , 4 , 3 , 2 , 1 
				}
				
				for ( int k = 0 ; k < arr.length ; k++ ) {
					System.out.print(arr[k] + ", ");
				}
				
				
				
				
			}
		
		}
		
		
		
	}

	
	
	public void practice9() {
		
		Scanner sc = new Scanner(System.in) ;
		
		int[] arr = new int[10] ;
		
		
		System.out.print("발생한 난수 : ");
		for (int i = 0 ; i < arr.length ; i++ ) {
			
			int random = (int)( Math.random() * 10 + 1) ;
			arr[i] = random ;
			System.out.print( arr[i] + " " );
		}
		
		
	}
	
	
	public void practice10() {
		
		
		int[] arr = new int[10] ;
		System.out.print("발생한 난수 : ");
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			arr[i] = (int)(Math.random() * 10 + 1 ) ;
			System.out.print(arr[i] + " ");
			
		}
		
		int max = arr[0] ;
		int min = arr[0] ;
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			if( arr[i] > max) {
				max = arr[i] ;
			}
			if ( arr[i] < min ) {
				min = arr[i] ;
			}
			
		}
		
		System.out.print("\n최댓값 : " + max);
		System.out.print("\n최솟값 : " + min);
		
		
	}
	
	
	public void practice11() {
		
		int[] arr = new int[10] ;
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			arr[i] = (int)( Math.random() * 10 + 1 ) ;		// 배열의 값을 결정함 
															// 여기서 정해진값이 전에 정해진 값과 같은경우 
			for ( int j = 0 ; j < i ; j++ ) {		// i를 하나 줄이는 코드를 작성해야함
				
				if ( arr[j] == arr[i] ) {
					
					i-- ;
					
				}
				
			}
			
		}
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
		System.out.print(arr[i] + " ");
		
		}
		
		
	}
	
	
	public void practice12() {
		
//		로또 번호 자동 생성기 프로그램을 만들기.
//		(중복 값 없이 오름차순으로 정렬하여 출력하세요.)
//		[실행 화면]
//		3 4 15 17 28 40 
		
		int lotto[] = new int[6] ;
		
		
		for ( int i = 0 ; i < lotto.length ; i ++ ) {
		
			
			int random = (int)(Math.random() * 45 + 1) ;
			lotto[i] = random ;
			
			for ( int j = 0 ; j < i ; j++ ) {
				if ( lotto[j] == lotto[i] ) {
					i-- ;
				}
			}
			
			
		}
		
		Arrays.sort(lotto);
		
		for ( int i = 0 ; i < lotto.length ; i++ ) {
		System.out.print(lotto[i] + " ");
		}
		
	}
	
	
	public void practice13() {
		
//		문자열을 입력 받아 문자열에 어떤 문자가 들어갔는지 배열에 저장하고
//		문자의 개수와 함께 출력하세요.
//		[실행 화면]
//		문자열 : application
//		문자열에 있는 문자 : a, p, l, i, c, t, o, n
//		문자 개수 : 8
		
		Scanner sc = new Scanner(System.in) ;
		
		System.out.print("문자열 : ");
		String input = sc.nextLine();
		
		char[] arr = new char[input.length()] ;
		int count = 0 ;
		
		System.out.print("문자열에 있는 문자 : ");
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			arr[i] = input.charAt(i);
			System.out.print(arr[i] + " ");
			count++ ;
			
		}
		
		System.out.println("\n문자 개수 : " + count);
		
	}
	
	
	public void practice14() {
		
//		사용자가 입력한 배열의 길이만큼의 문자열 배열을 선언 및 할당하고
//		배열의 인덱스에 넣을 값 역시 사용자가 입력하여 초기화 하세요.
//		단, 사용자에게 배열에 값을 더 넣을지 물어보고 몇 개를 더 입력할 건지,
//		늘린 곳에 어떤 데이터를 넣을 것인지 받으세요.
//		사용자가 더 이상 입력하지 않겠다고 하면 배열 전체 값을 출력하세요.
		
		/*Scanner sc = new Scanner(System.in) ;
		
		System.out.print("배열의 크기를 입력하세요 : ");
		int arrSize = sc.nextInt() ;
		
		String[] arr = new String[arrSize] ; 
		
		
		for ( int i = 0 ; i < arr.length ; i++ ) {
			
			System.out.print( (i + 1) + "번째 문자열 : ");
			arr[i] = sc.nextLine() ;
			
		if ( i == arr.length - 1 ) {
			
			System.out.println("\n더 값을 입력하시겠습니까? (y/n) ");
			char add = sc.next().charAt(0) ;
		
			if ( add == 'y' ) {
				
				System.out.print("\n더 입력하고 싶은 개수 : ");
				int addArr = sc.nextInt() ;
				
				arrSize += addArr ;
				
			}else if ( add == 'n') {
				
				System.out.println(Arrays.deepToString(arr));
				
			}
		}else {
			
			
			
		}
		
		}
	*/	
	}
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}
